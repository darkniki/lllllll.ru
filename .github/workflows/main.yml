name: CI

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ github.repository }}
  APP_NAME: 'lllllll-ru'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build App
        run: yarn build

      - name: Archive build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: dist

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - id: commit
        uses: pr-mpt/actions-commit-hash@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${{ steps.commit.outputs.short }}

      - name: Save SHA
        env:
          TAG: ${{ steps.commit.outputs.short }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          APP_NAME: ${{ env.APP_NAME }}
        run: |
          envsubst < .ops/helm/Deployment.yaml > tempbase
          cat tempbase > .ops/helm/Deployment.yaml
          rm tempbase

      - name: Upload helm
        uses: actions/upload-artifact@v2
        with:
          name: helm
          path: .ops/helm
          retention-days: 5

  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test: [ 'type-check',' lint' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('yarn.lock') }}

      - name: run test ${{ matrix.test }}
        run: npm run ${{ matrix.test }}

  deploy:
    name: Deploy
    environment:
      name: dev
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Kubectl tool installer
        uses: Azure/setup-kubectl@v1

      - name: Setup kubectl
        env:
          K8S_CONFIG: ${{ secrets.K8S_CONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "${K8S_CONFIG}" | base64 --decode > $HOME/.kube/config

      - name: Download Deploy
        uses: actions/download-artifact@v2
        with:
          name: helm

      - name: Apply pods
        run: kubectl apply -f Deployment.yaml -n default

      - name: Wait For Deployment To Start
        run: sleep 10s

      - name: Wait For Pods To Start
        run: kubectl wait --for=condition=ready pod -l app=${{ env.APP_NAME }} -n default --timeout=10m
